<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

	<mvc:annotation-driven />

	<context:component-scan base-package="org.thcic.xapx.dao" use-default-filters="false">
		<context:include-filter type="regex" expression="org.thcic.xapx.dao.*" />
	</context:component-scan>
	
	<context:property-placeholder location="/WEB-INF/config/jdbc.properties, /WEB-INF/config/webapp.properties"/>
	
	<jee:jndi-lookup id="dataSource" jndi-name="${dataSource.jndiName}" 
		expected-type="javax.sql.DataSource" lookup-on-startup="false" />
		
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler">
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="org.thcic.xapx.domain" />
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:org/thcic/xapx/domain</value>
			</list>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
				<!-- 显示Hibernate持久化操作所生成的SQL -->
				<prop key="hibernate.show_sql">false</prop>
				<!-- 将SQL脚本进行格式化后再输出 -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
	</bean>

</beans>
